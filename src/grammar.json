{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "plo",
  "word": "name",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_anything"
      }
    },
    "_anything": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_experimental"
        },
        {
          "type": "SYMBOL",
          "name": "keyword"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        },
        {
          "type": "SYMBOL",
          "name": "out_dependency"
        },
        {
          "type": "SYMBOL",
          "name": "implicit_dependency"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "string_block"
        },
        {
          "type": "SYMBOL",
          "name": "embed"
        },
        {
          "type": "SYMBOL",
          "name": "call"
        },
        {
          "type": "SYMBOL",
          "name": "call_multi"
        },
        {
          "type": "SYMBOL",
          "name": "punctuation"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        }
      ]
    },
    "keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "is"
        },
        {
          "type": "STRING",
          "value": "has"
        },
        {
          "type": "STRING",
          "value": "does"
        },
        {
          "type": "STRING",
          "value": "must"
        },
        {
          "type": "STRING",
          "value": "be"
        },
        {
          "type": "STRING",
          "value": "do"
        },
        {
          "type": "STRING",
          "value": "uses"
        },
        {
          "type": "STRING",
          "value": "but"
        },
        {
          "type": "STRING",
          "value": "also"
        },
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "of"
        },
        {
          "type": "STRING",
          "value": "at"
        },
        {
          "type": "STRING",
          "value": "as"
        },
        {
          "type": "STRING",
          "value": "by"
        },
        {
          "type": "STRING",
          "value": "with"
        },
        {
          "type": "STRING",
          "value": "for"
        },
        {
          "type": "STRING",
          "value": "from"
        },
        {
          "type": "STRING",
          "value": "to"
        },
        {
          "type": "STRING",
          "value": "upto"
        },
        {
          "type": "STRING",
          "value": "downto"
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "STRING",
          "value": "out"
        },
        {
          "type": "STRING",
          "value": "into"
        },
        {
          "type": "STRING",
          "value": "outof"
        },
        {
          "type": "STRING",
          "value": "on"
        },
        {
          "type": "STRING",
          "value": "off"
        }
      ]
    },
    "name": {
      "type": "PATTERN",
      "value": "\\w([\\w-]*\\w)?"
    },
    "out_dependency": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "&"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "\\w([\\w-]*\\w)?"
          }
        }
      ]
    },
    "implicit_dependency": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "\\w([\\w-]*\\w)?"
          }
        }
      ]
    },
    "call": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "func",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "("
          }
        }
      ]
    },
    "call_multi": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "func",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": ":"
          }
        }
      ]
    },
    "_experimental": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "inside_out_call"
        }
      ]
    },
    "inside_out_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "^-"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^\\n\"\\\\]+"
              },
              {
                "type": "PATTERN",
                "value": "\\\\[^(]"
              },
              {
                "type": "SYMBOL",
                "name": "interpolation"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "string_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "PATTERN",
            "value": "-`.*"
          }
        },
        {
          "type": "STRING",
          "value": "--"
        }
      ]
    },
    "embed": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "---"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "PATTERN",
              "value": "\\w+"
            }
          },
          "named": true,
          "value": "embed_lang"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "PATTERN",
              "value": "[^\\-]*|--|----+"
            }
          },
          "named": true,
          "value": "embed_body"
        },
        {
          "type": "STRING",
          "value": "---"
        }
      ]
    },
    "interpolation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_anything"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "punctuation": {
      "type": "PATTERN",
      "value": "[\\.:,;/()]"
    },
    "comment": {
      "type": "PATTERN",
      "value": "`.*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}